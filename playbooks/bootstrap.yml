---
# Playbook: playbooks/bootstrap.yml
# Description: Create servers.
#
# Usage:
#
#  # Group of servers
#  ./bin/ansible-playbook playbooks/bootstrap.yml
#
- name: "Create Training Environment"
  hosts: "localhost"
  gather_facts: false
  become: false
  vars:
    raw_keys: []

  tasks:


    - name: "Get SSH keys for students"
      block:
        - name: "Get SSH keys for students"
          ansible.builtin.set_fact:
            raw_keys: "{{ item | get_ssh_keys(raw_keys) }}"
          with_items: "{{ students }}"

        - name: "Create SSH keys variables"
          ansible.builtin.set_fact:
            keys: "{{ dict(raw_keys) }}"
            all_keys: "{{ raw_keys | flatten_ssh_keys(training_prefix) }}"

        - name: "Digital Ocean: Register SSH key"
          community.digitalocean.digital_ocean_sshkey:
            oauth_token: "{{ lookup('ansible.builtin.env', 'DO_API_TOKEN') }}"
            name: "{{ item.key }}"
            ssh_pub_key: "{{ item.value }}"
            state: present
          register: _do_keys
          with_dict: "{{ all_keys }}"

        - name: "SSH Keys by GitHub username"
          ansible.builtin.set_fact:
            do_keys: "{{ _do_keys | do_keys_by_username(training_prefix) }}"

    - name: "Digital Ocean: Create new Project"
      community.digitalocean.digital_ocean_project:
        name: "{{ do_droplet.specs.project_name }}"
        oauth_token: "{{ lookup('ansible.builtin.env', 'DO_API_TOKEN') }}"
        state: "present"
        description: "Project used for training"
        purpose: "Website or blog"
        environment: "Development"

    - name: "Digital Ocean: Create new Droplets"
      community.digitalocean.digital_ocean_droplet:
        state: "present"
        oauth_token: "{{ lookup('ansible.builtin.env', 'DO_API_TOKEN') }}"
        name: "{{ do_droplet.specs.name_prefix }}-{{ item | lower }}"
        size: "{{ do_droplet.specs.size }}"
        region: "{{ do_droplet.specs.region }}"
        image: "{{ do_droplet.specs.image }}"
        user_data: "{{ lookup('ansible.builtin.template', '../etc/digitalocean/user-data.yml.j2') }}"
        project_name: "{{ do_droplet.specs.project_name }}"
        tags: "{{ do_droplet.specs.tags }}"
        unique_name: true
        wait_timeout: 500
        ssh_keys: "{{ do_keys[item] | map(attribute='id') | list }}"
      register: droplets
      with_items: "{{ students }}"
      when: item in do_keys

    - name: "SSH Keys by GitHub username"
      ansible.builtin.debug:
        msg: "{{ droplets | parse_droplets }}"

    - name: "Cloudflare: Create a record using api token"
      community.general.cloudflare_dns:
        zone: "{{ dns.domain_name }}"
        state: present
        solo: true
        record: "{{ item.name | lower }}"
        type: A
        value: "{{ item.host }}"
        proxied: false
        api_token: "{{ lookup('ansible.builtin.env', 'CLOUDFLARE_TOKEN') }}"
      with_items: "{{ droplets | parse_droplets }}"
